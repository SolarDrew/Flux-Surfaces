  !##############################################################################
  ! module vacusr - uniform spiral ! setvac -d=22 -g=204,204 -p=hdadiab -u=sim1
  
  
  INCLUDE:vacusr.gravity.t
  INCLUDE:vacusr.viscosity.t

  !=============================================================================
  SUBROUTINE specialini(ix^L,w)

    INCLUDE 'vacdef.f'

    INTEGER:: ix^L
    DOUBLE PRECISION:: w(ixG^T,1:nw)

    RETURN
  END SUBROUTINE specialini


  !=============================================================================
  SUBROUTINE specialsource(qdt,ixI^L,ixO^L,iws,qtC,wCT,qt,w)

    INCLUDE 'vacdef.f'

    INTEGER:: ixI^L,ixO^L,iws(niw_)
    DOUBLE PRECISION:: qdt,qtC,qt,wCT(ixG^T,nw),w(ixG^T,nw) !Intent(IN)

    INTEGER:: iw
    INTEGER:: ix_1,ix_2,ix_3

    DOUBLE PRECISION:: s_period, xc1, xc2, xc3, xxmax, yymax, zzmax
    DOUBLE PRECISION:: xc1Mm, xc2Mm, xc3Mm
    DOUBLE PRECISION:: xx, yy, zz
    DOUBLE PRECISION:: vvx(ixG^T), vvy(ixG^T), vvz(ixG^T)
    DOUBLE PRECISION:: AA, B, ux, uy, phi, theta
    DOUBLE PRECISION:: delta_z, delta_x, delta_y, exp_x, exp_y, exp_z, exp_xyz, tdep
    !-----------------------------------------------------------------------------

    eqpar(eta_)=0.d0
    eqpar(nu_)=1.0d0
    
    CALL addsource_grav(qdt,ixI^L,ixO^L,iws,qtC,wCT,qt,w)
    
    IF(ABS(eqpar(nu_))>smalldouble)&
         CALL addsource_visc(qdt,ixI^L,ixO^L,iws,qtC,wCT,qt,w)

  END SUBROUTINE specialsource



!=============================================================================
SUBROUTINE specialbound(qt,ix^L,iw,iB,w)
  INCLUDE 'vacdef.f'

  INTEGER:: ix_1,ix_2

  INTEGER:: iw^LIM,idim^LIM
  DOUBLE PRECISION:: qt,w(ixG^T,1:nw)
  INTEGER:: ix,ix^D,ixe,ixf,ix^L,ixpair^L,idim,iw,iB

  CALL die('not defined')
  RETURN
END SUBROUTINE specialbound

!=============================================================================
SUBROUTINE getdt_special(w,ix^L)

  ! If the Coriolis force is made very strong it may require time step limiting,
  ! but this is not implemented here.

  INCLUDE 'vacdef.f'
  DOUBLE PRECISION:: w(ixG^T,nw)
  INTEGER:: ix^L
  !----------------------------------------------------------------------------

  !call getdt_diff(w,ix^L)

  IF(ABS(eqpar(nu_))>smalldouble)&
       CALL getdt_visc(w,ix^L)

  CALL getdt_grav(w,ix^L)

  RETURN
END SUBROUTINE getdt_special

!=============================================================================
SUBROUTINE specialeta(w,ix^L,idirmin)

  INCLUDE 'vacdef.f'

  DOUBLE PRECISION:: w(ixG^T,nw)
  INTEGER:: ix^L,idirmin
!------------------------------------------------------------------------------

  STOP 'specialeta is not defined'
END SUBROUTINE specialeta

!------------------------------------------------------------------------------
SUBROUTINE savefilelog_special(qunit,w,ix^L)
  
  ! This is a save log file routine to calculate and save out Vpar Vperp and Vaz
  ! It mimics savefileout_bin to mantain compatibility with usual readin routines
  
  INCLUDE 'vacdef.f'

  INTEGER:: qunit,ix^L
  DOUBLE PRECISION :: w(ixG^T,nw)

  CALL die("log save is not defined")

END SUBROUTINE savefilelog_special

